image: registry.home:5000/home/bullseye:latest

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

.common:
  tags:
    - container

.cache-paths: &cache-paths
  paths:
    - .cache/pip

.cache-user:
  extends: .common
  cache:
    <<: *cache-paths
    policy: pull

.cache-creator:
  extends: .common
  cache:
    <<: *cache-paths
    policy: push

before_script:
  - python3 -V  # Print out python version for debugging
  - env| egrep 'CI_|PIP_|TWINE_' || true

stages:
  - build
  - install
  - test
  - docs
  - upload-successful

.build:
  extends: .cache-user
  stage: build
  script:
    - if test -d /venv; then . /venv/bin/activate ; else python3 -m venv venv; . venv/bin/activate; fi
    - pip list
    - pip install --upgrade pip wheel
    - pip list
    - pip install --upgrade build setuptools pytest
    - pip list
    - python3 -m build
  artifacts:
    paths:
      - dist/*.whl

.test-install:
  extends: .cache-user
  stage: install
  script:
    - if test -n "$APT_PKG"; then apt-get update; apt -y install $APT_PKG ; fi
    - if test -d /venv; then . /venv/bin/activate ; else python3 -m venv venv; . venv/bin/activate; fi
    - pip list
    - pip install --upgrade pip wheel
    - pip list
    - pip install $PIP_OPTIONS dist/*.whl
    - pip list

.pytest:
  extends: .cache-user
  stage: test
  script:
    - if test -d /venv; then . /venv/bin/activate ; else python3 -m venv venv; . venv/bin/activate; fi
    - pip list
    - pip install --upgrade pip wheel
    - pip list
    - pip install --upgrade pytest
    - pip list
    - pip install $PIP_OPTIONS dist/*.whl
    - pytest src

.run-examples:
  extends: .cache-user
  stage: test
  # specific ci files should define the script steps

.docs-stage:
  extends: .cache-user
  stage: docs
  script:
    - if test -d /venv; then . /venv/bin/activate ; else python3 -m venv venv; . venv/bin/activate; fi
    - pip list
    - pip install --upgrade pip wheel
    - pip list
    - pip install pytest pdoc3
    - pip list
    - pip install dist/*.whl
    - pip list
    - mkdir -p public
    - PYTHONPATH=src pdoc $PACKAGE_NAME > public/README_api.md
    - PYTHONPATH=src pdoc --html -o public/html $PACKAGE_NAME
  artifacts:
    paths:
      - public

.docs:
  extends: .docs-stage
  except:
    - master

.pages:
  extends: .docs-stage
  only:
    - master

.upload-successful:
  extends: .cache-user
  stage: upload-successful
  script:
    - if test -d /venv; then . /venv/bin/activate ; else python3 -m venv venv; . venv/bin/activate; fi
    - pip list
    - pip install --upgrade pip wheel
    - pip list
    - if test -n "$TWINE_UPLOAD"; then pip install twine; twine upload -u "$TWINE_USERNAME" --repository-url "$TWINE_REPOSITORY" dist/*.whl ; fi
